# app.py

from flask import Flask, render_template, request, jsonify
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import os, json
from datetime import datetime

# --- KHAI B√ÅO C·∫§U H√åNH ---
# T√™n Sheet ch·ª©a d·ªØ li·ªáu nh√¢n vi√™n
DATA_SHEET_NAME = "Data" 
# T√™n Sheet l∆∞u k·∫øt qu·∫£ kh·∫£o s√°t
RESPONSE_SHEET_NAME = "Respond"
# Ti√™u ƒë·ªÅ Form (ƒê∆∞·ª£c truy·ªÅn v√†o template)
FORM_TITLE = "BI·ªÇU M·∫™U KH·∫¢O S√ÅT NHU C·∫¶U ƒê√ÄO T·∫†O"

app = Flask(__name__)

# Kh·ªüi t·∫°o k·∫øt n·ªëi Google Sheets
def setup_google_sheets():
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds_json = os.environ.get("GOOGLE_CREDENTIALS")
    
    if not creds_json:
        print("‚ö†Ô∏è GOOGLE_CREDENTIALS environment variable not set!")
        return None

    try:
        creds_dict = json.loads(creds_json)
        creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
        client = gspread.authorize(creds)
        
        # CH√ö √ù: THAY T√äN FILE GOOGLE SHEET C·ª¶A B·∫†N V√ÄO D∆Ø·ªöI ƒê√ÇY
        spreadsheet = client.open("T√äN FILE GOOGLE SHEET C·ª¶A B·∫†N") 
        print("‚úÖ Google Sheets k·∫øt n·ªëi th√†nh c√¥ng l√∫c kh·ªüi ƒë·ªông.")
        return spreadsheet
    except Exception as e:
        # B·∫Øt l·ªói JSON, API, ho·∫∑c k·∫øt n·ªëi
        print(f"üö® L·ªñI KH·ªûI T·∫†O K·∫æT N·ªêI GOOGLE SHEETS: {e}")
        return None

# G·ªçi h√†m setup sheets khi ·ª©ng d·ª•ng kh·ªüi ƒë·ªông
SPREADSHEET_CLIENT = setup_google_sheets()

# --- M√î PH·ªéNG H√ÄM L·∫§Y DANH S√ÅCH NH√ÇN VI√äN ---
def get_employee_list():
    if not SPREADSHEET_CLIENT:
        return []
        
    try:
        data_sheet = SPREADSHEET_CLIENT.worksheet(DATA_SHEET_NAME)
        # L·∫•y t·∫•t c·∫£ gi√° tr·ªã. T√πy ch·ªânh ph·∫°m vi n·∫øu c·∫ßn t·ªëi ∆∞u
        values = data_sheet.get_all_values()
        
        employee_data = []
        if len(values) > 1:
            for row in values[1:]: # B·ªè h√†ng ti√™u ƒë·ªÅ
                if row and row[0].strip(): 
                     employee_data.append({
                        "MaNV": row[0],
                        "HoTen": row[1] if len(row) > 1 else '',
                        "BoPhan": row[2] if len(row) > 2 else ''
                    })
        return employee_data
    except gspread.WorksheetNotFound:
        print(f"üö® Sheet DATA_SHEET_NAME ({DATA_SHEET_NAME}) kh√¥ng t√¨m th·∫•y. Kh√¥ng th·ªÉ t·∫£i danh s√°ch NV.")
        return []
    except Exception as e:
        print(f"üö® L·ªñI L·∫§Y DANH S√ÅCH NV: {e}")
        return []

# --- ROUTES ---

@app.route('/', methods=['GET'])
def index():
    # S·ª¨A L·ªñI TemplateNotFound: ƒê√£ thay 'survey_form.html' b·∫±ng 'form.html'
    return render_template('form.html', form_title=FORM_TITLE) 

@app.route('/get_employees', methods=['GET'])
def get_employees_route():
    # API endpoint ƒë·ªÉ JavaScript l·∫•y danh s√°ch nh√¢n vi√™n
    employee_list = get_employee_list()
    # N·∫øu danh s√°ch tr·ªëng, logs s·∫Ω hi·ªÉn th·ªã l·ªói SheetNotFound ho·∫∑c k·∫øt n·ªëi ·ªü h√†m tr√™n
    return jsonify(employee_list)

@app.route('/submit', methods=['POST'])
def submit_form():
    if not SPREADSHEET_CLIENT:
        return jsonify({"status": "error", "message": "L·ªói k·∫øt n·ªëi Google Sheets. Vui l√≤ng ki·ªÉm tra Logs."}), 500
        
    try:
        form_data = request.form.to_dict(flat=False) 
        
        # X·ª≠ l√Ω c√°c tr∆∞·ªùng checkbox (NhuCauDT v√† HinhThucDT)
        nhu_cau_dt_values = form_data.get('NhuCauDT', [])
        hinh_thuc_dt = "; ".join(form_data.get('HinhThucDT', []))
        
        # X·ª≠ l√Ω tr∆∞·ªùng "Kh√°c" trong Nhu C·∫ßu ƒêT
        other_text = form_data.get('NhuCauDT_OtherText', [''])[0]
        if other_text and other_text.strip():
            # Th√™m gi√° tr·ªã 'Kh√°c' v√†o danh s√°ch n·∫øu c√≥
            nhu_cau_dt_values.append(f"Kh√°c: {other_text}")
            
        nhu_cau_dt = "; ".join(nhu_cau_dt_values)

        response_sheet = SPREADSHEET_CLIENT.worksheet(RESPONSE_SHEET_NAME)

        # Ki·ªÉm tra v√† ghi ti√™u ƒë·ªÅ (GI·ªÆ NGUY√äN LOGIC GAS)
        if response_sheet.row_count < 1 or not response_sheet.row_values(1) or response_sheet.row_values(1)[0] == '':
             headers = [
                "Th·ªùi Gian G·ª≠i", "M√£ NV", "H·ªç v√† T√™n", "B·ªô ph·∫≠n", "Th√¢m ni√™n", 
                "NL_1: Tri·ªÉn khai & gi√°m s√°t SX", "NL_2: Ki·ªÉm so√°t ch·∫•t l∆∞·ª£ng", "NL_3: Qu·∫£n l√Ω NVL & l√£ng ph√≠", 
                "NL_4: An to√†n & v·ªá sinh Lƒê", "NL_5: An to√†n TP & v·ªá sinh CN", "NL_6: Ph√¢n c√¥ng & qu·∫£n l√Ω ƒë·ªôi ng≈©",
                "NL_7: Hu·∫•n luy·ªán & k√®m c·∫∑p", "NL_8: K·ªπ nƒÉng giao ti·∫øp", "NL_9: Gi·∫£i quy·∫øt m√¢u thu·∫´n & ƒë·ªôi nh√≥m",
                "NL_10: Gi·∫£i quy·∫øt Vƒê & ra quy·∫øt ƒë·ªãnh", "NL_11: T∆∞ duy c·∫£i ti·∫øn (Kaizen)",
                "Nhu C·∫ßu ƒêT", "Th√°ch th·ª©c c√¥ng vi·ªác", "H√¨nh th·ª©c ƒêT", "ƒê·ªÅ Xu·∫•t Kh√°c" 
            ]
             response_sheet.insert_row(headers, 1)

        # Chu·∫©n b·ªã d·ªØ li·ªáu ƒë·ªÉ ghi
        row_data = [
            datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            form_data.get('employeeCode', [''])[0],
            form_data.get('employeeName', [''])[0],
            form_data.get('department', [''])[0],
            form_data.get('Seniority', [''])[0],
            
            # 11 C√¢u h·ªèi NƒÉng l·ª±c
            form_data.get('NL_1', [''])[0], form_data.get('NL_2', [''])[0], form_data.get('NL_3', [''])[0], 
            form_data.get('NL_4', [''])[0], form_data.get('NL_5', [''])[0], form_data.get('NL_6', [''])[0],
            form_data.get('NL_7', [''])[0], form_data.get('NL_8', [''])[0], form_data.get('NL_9', [''])[0],
            form_data.get('NL_10', [''])[0], form_data.get('NL_11', [''])[0],
            
            # C. Nhu C·∫ßu ƒê√†o T·∫°o v√† ƒê·ªÅ Xu·∫•t
            nhu_cau_dt,
            form_data.get('ThachThucCongViec', [''])[0],
            hinh_thuc_dt,
            form_data.get('DeXuatKhacMoi', [''])[0]
        ]
        
        response_sheet.append_row(row_data)

        # Tr·∫£ v·ªÅ JSON cho JavaScript x·ª≠ l√Ω
        return jsonify({"status": "success", "message": "G·ª≠i kh·∫£o s√°t th√†nh c√¥ng!"})

    except Exception as e:
        # N·∫øu c√≥ l·ªói trong qu√° tr√¨nh ghi d·ªØ li·ªáu ho·∫∑c x·ª≠ l√Ω form
        print(f"üö® L·ªñI X·ª¨ L√ù FORM: {e}")
        return jsonify({"status": "error", "message": f"L·ªói server khi ghi d·ªØ li·ªáu: {str(e)}"}), 500

if __name__ == '__main__':
    # Ch·ªâ ch·∫°y local
    app.run(host='0.0.0.0', port=5000, debug=True)
